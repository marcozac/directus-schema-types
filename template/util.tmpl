{{- define "header/base" -}}
// File generated by directus-schema-types. Do not change.
{{- end }}
{{- /* "header/base" END */ -}}


{{- /* "import/imports" defines the imports from a []Import context. */ -}}
{{- define "import/imports" }}
{{- range $ }}
import { {{ joinSlice .Symbols }} } from {{ quote .Path }};
{{- end }}
{{- end }}
{{- /* "import/imports" END */ -}}


{{- /* "import/collections" defines the imports from the collections schema. */ -}}
{{- /* It must be executed with a Graph context. */ -}}
{{- define "import/collections" }}
{{- range $.Collections }}
import { {{ .TypeName }} } from {{ printf "./%s%s" .Name $.ImportFileExtension | quote }};
{{- end }}
{{- end }}
{{- /* "import/collections" END */ -}}


{{- /* "import/relations" defines the imports of all the collection relations. */ -}}
{{- /* It must be executed with a Graph context. */ -}}
{{- define "import/relations" }}
{{- range $.Collections }}
import { {{ join .Relations.TypeName .RelatedCollections.TypeName }} } from
	{{- printf "./%s%s" .Name $.ImportFileExtension | quote }};
{{- end }}
{{- end }}
{{- /* "import/relations" END */ -}}


{{- /* "import/payloads" defines the imports of all the collections payload. */ -}}
{{- /* It must be executed with a []Collection context. */ -}}
{{- define "import/payloads" }}
{{- range $ }}
import { {{ template "payload/type_name" . }} } from {{ printf "./%s" .Name | quote }};
{{- end }}
{{- end }}
{{- /* "import/payloads" END */ -}}
