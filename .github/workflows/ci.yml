name: CI
on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/ci.yml
      - 'go.mod'
      - 'go.sum'
      - '**.go'
      - '**.tmpl'
  pull_request:
    paths:
      - .github/workflows/ci.yml
      - 'go.mod'
      - 'go.sum'
      - '**.go'
      - '**.tmpl'

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Generate
        run: go generate ./... && go mod tidy
      - name: Check generated files
        run: |
          STATUS=$(git status --porcelain)
          if [ -n "$STATUS" ]; then
            echo "the branch contains not generated files"
            echo "run 'go generate ./...' and commit the changes"
            echo "$STATUS"
            git --no-pager diff
            exit 1
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

  test:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        # @TODO
        # Test with different Directus versions.
        directusVersion: ['11.1.0']
        include:
          - # enable coverage for the default os and Directus version.
            coverage: true
            os: 'ubuntu-latest'
            directusVersion: '11.1.0'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Test Windows
        if: ${{ matrix.os == 'windows-latest' }}
        env:
          DIRECTUS_VERSION: ${{ matrix.directusVersion }}
          DIRECTUS_DB_VENDOR: 'sqlite'
          DIRECTEST_USE_SERVER: 'true'
        run: go test -v -race
      - name: Test
        if: ${{ matrix.os != 'windows-latest' }}
        env:
          DIRECTUS_VERSION: ${{ matrix.directusVersion }}
          DIRECTUS_DB_VENDOR: 'sqlite'
        run: >-
          go test -v -race
          -covermode=atomic
          -coverprofile=coverage.out
          -coverpkg=./...
          ./...
      - name: Upload coverage reports to Codecov
        if: ${{ matrix.coverage }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
