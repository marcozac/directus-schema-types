// File generated by directus-schema-types. Do not change.

import { DirectusRevisionsPrimaryKey, DirectusRevisions } from './directus_revisions';
import { DirectusUsersPrimaryKey, DirectusUsers } from './directus_users';

// --- directus_activity ---

export type DirectusActivityPrimaryKeyField = 'id';
export type DirectusActivityPrimaryKey = number;

export interface DirectusActivity {
    // Type: string
    action?: string;

    // Type: string
    collection?: string;

    // Type: text
    comment?: string | null;

    // Type: integer
    id?: number;

    // Type: string
    ip?: string | null;

    // Type: string
    item?: string;

    // Type: string
    origin?: string | null;

    // Type: timestamp
    timestamp?: Date;

    // Type: string
    user?: string | null;

    // Type: text
    user_agent?: string | null;
}

export interface DirectusActivityRelations {
    revisions: (DirectusRevisionsPrimaryKey | DirectusRevisions)[];

    user: DirectusUsersPrimaryKey | DirectusUsers;
}

/**
 * DirectusActivityRelatedCollections maps the {@link DirectusActivityRelations}
 * fields to the name of the related collection.
 */
export interface DirectusActivityRelatedCollections {
    revisions: 'directus_revisions';
    user: 'directus_users';
}

export type DirectusActivityPayload = Omit<DirectusActivity, 'timestamp'> & {
    // Type: timestamp
    timestamp?: string;
};

/**
 * @param v The payload to parse.
 * @returns The payload parsed to {@link DirectusActivity}.
 */
export function parseDirectusActivityPayload(v: DirectusActivityPayload): DirectusActivity {
    const r = v as Record<keyof DirectusActivity, unknown>;
    if (v.timestamp) {
        r.timestamp = new Date(v.timestamp);
    }
    return r as DirectusActivity;
}
