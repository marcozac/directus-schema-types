// File generated by directus-schema-types. Do not change.

import { DirectusRevisions, DirectusRevisionsPrimaryKey } from './directus_revisions';
import { DirectusUsers, DirectusUsersPrimaryKey } from './directus_users';

export type DirectusActivityPrimaryKey = number;
export type DirectusActivityPrimaryKeyField = 'id';

export interface DirectusActivity {
    /**
     * Type: string
     */
    action?: string;
    /**
     * Type: string
     */
    collection?: string;
    /**
     * Type: text
     */
    comment?: string | null;
    /**
     * Type: integer
     */
    id?: DirectusActivityPrimaryKey;
    /**
     * Type: string
     */
    ip?: string | null;
    /**
     * Type: string
     */
    item?: string;
    /**
     * Type: string
     */
    origin?: string | null;
    /**
     * Type: timestamp
     */
    timestamp?: Date;
    /**
     * Type: string
     */
    user?: string | null;
    /**
     * Type: text
     */
    user_agent?: string | null;
}

export interface DirectusActivityRelations {
    revisions?: (DirectusRevisionsPrimaryKey | DirectusRevisions)[];
    user?: DirectusUsersPrimaryKey | DirectusUsers;
}

export interface DirectusActivityRelatedCollections {
    revisions: 'directus_revisions';
    user: 'directus_users';
}

export interface DirectusActivityPayload extends Omit<DirectusActivity, 'timestamp'> {
    timestamp?: string;
}

/**
 * parseDirectusActivityPayload parses the given {@link DirectusActivityPayload} payload.
 * @param v The payload to parse.
 * @returns The payload parsed to {@link DirectusActivity}.
 */
export function parseDirectusActivityPayload(v: DirectusActivityPayload): DirectusActivity {
    const r = v as Record<keyof DirectusActivity, unknown>;
    if (v.timestamp) {
        r.timestamp = new Date(v.timestamp);
    }
    return r as DirectusActivity;
}

/**
 * parseDirectusActivity parses the given {@link DirectusActivity}.
 * @param v The object to parse.
 * @returns The payload {@link DirectusActivityPayload}.
 */
export function parseDirectusActivity(v: DirectusActivity): DirectusActivityPayload {
    const r = v as Record<keyof DirectusActivityPayload, unknown>;
    if (v.timestamp) {
        r.timestamp = v.timestamp.toString();
    }
    return r as DirectusActivityPayload;
}
