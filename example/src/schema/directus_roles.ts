// File generated by directus-schema-types. Do not change.

import { DirectusAccessPrimaryKey, DirectusAccess } from './directus_access';
import { DirectusUsersPrimaryKey, DirectusUsers } from './directus_users';

// --- directus_roles ---

export type DirectusRolesPrimaryKeyField = 'id';
export type DirectusRolesPrimaryKey = string;

export interface DirectusRoles {
    // Type: text
    description?: string | null;

    // Type: string
    icon?: string;

    // Type: uuid
    id?: string;

    // Type: string
    name: string;

    // $t:field_options.directus_roles.parent_note
    // Type: string
    parent?: string | null;
}

export interface DirectusRolesRelations {
    children: (DirectusRolesPrimaryKey | DirectusRoles)[];

    parent: DirectusRolesPrimaryKey | DirectusRoles;

    policies: (DirectusAccessPrimaryKey | DirectusAccess)[];

    users: (DirectusUsersPrimaryKey | DirectusUsers)[];
}

/**
 * DirectusRolesRelatedCollections maps the {@link DirectusRolesRelations}
 * fields to the name of the related collection.
 */
export interface DirectusRolesRelatedCollections {
    children: 'directus_roles';
    parent: 'directus_roles';
    policies: 'directus_access';
    users: 'directus_users';
}

// The payload is the same as the schema definition.
export type DirectusRolesPayload = DirectusRoles;

/**
 * @param v The payload to parse.
 * @returns The payload as it is received: it is the same as the schema definition.
 */
export function parseDirectusRolesPayload(v: DirectusRolesPayload): DirectusRoles {
    return v;
}
