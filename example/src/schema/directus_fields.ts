// File generated by directus-schema-types. Do not change.

import { DirectusCollectionsPrimaryKey, DirectusCollections } from './directus_collections';

// --- directus_fields ---

export type DirectusFieldsPrimaryKeyField = 'id';
export type DirectusFieldsPrimaryKey = number;

export interface DirectusFields {
    // Type: string
    collection?: string;

    // Type: json
    conditions?: object | null;

    // Type: string
    display?: string | null;

    // Type: json
    display_options?: object | null;

    // Type: string
    field?: string;

    // Type: string
    group?: string | null;

    // Type: boolean
    hidden?: boolean;

    // Type: integer
    id?: number;

    // Type: string
    interface?: string | null;

    // Type: text
    note?: string | null;

    // Type: json
    options?: object | null;

    // Type: boolean
    readonly?: boolean;

    // Type: boolean
    required?: boolean | null;

    // Type: integer
    sort?: number | null;

    // Type: csv
    special?: any | null;

    // Type: json
    translations?: object | null;

    // Type: json
    validation?: object | null;

    // Type: text
    validation_message?: string | null;

    // Type: string
    width?: string | null;
}

export interface DirectusFieldsRelations {
    collection: DirectusCollectionsPrimaryKey | DirectusCollections;

    group: DirectusFieldsPrimaryKey | DirectusFields;
}

/**
 * DirectusFieldsRelatedCollections maps the {@link DirectusFieldsRelations}
 * fields to the name of the related collection.
 */
export interface DirectusFieldsRelatedCollections {
    collection: 'directus_collections';
    group: 'directus_fields';
}

// The payload is the same as the schema definition.
export type DirectusFieldsPayload = DirectusFields;

/**
 * @param v The payload to parse.
 * @returns The payload as it is received: it is the same as the schema definition.
 */
export function parseDirectusFieldsPayload(v: DirectusFieldsPayload): DirectusFields {
    return v;
}
