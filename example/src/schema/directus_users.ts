// File generated by directus-schema-types. Do not change.

import { DirectusAccessPrimaryKey, DirectusAccess } from './directus_access';
import { DirectusFilesPrimaryKey, DirectusFiles } from './directus_files';
import { DirectusRolesPrimaryKey, DirectusRoles } from './directus_roles';

// --- directus_users ---

export type DirectusUsersPrimaryKeyField = 'id';
export type DirectusUsersPrimaryKey = string;

export interface DirectusUsers {
    // Type: string
    appearance?: string | null;

    // Type: json
    auth_data?: object | null;

    // Type: string
    avatar?: string | null;

    // Type: text
    description?: string | null;

    // Type: string
    email?: string | null;

    // Type: boolean
    email_notifications?: boolean | null;

    // Type: string
    external_identifier?: string | null;

    // Type: string
    first_name?: string | null;

    // Type: uuid
    id?: string;

    // Type: string
    language?: string | null;

    // Type: dateTime
    readonly last_access?: Date | null;

    // Type: string
    last_name?: string | null;

    // Type: string
    last_page?: string | null;

    // Type: string
    location?: string | null;

    // Type: hash
    password?: string | null;

    // Type: string
    provider?: string;

    // Type: string
    role?: string | null;

    // Type: string
    status?: string;

    // Type: json
    tags?: object | null;

    // Type: string
    tfa_secret?: string | null;

    // Type: string
    theme_dark?: string | null;

    // Type: json
    theme_dark_overrides?: object | null;

    // Type: string
    theme_light?: string | null;

    // Type: json
    theme_light_overrides?: object | null;

    // Type: string
    title?: string | null;

    // Type: string
    token?: string | null;
}

export interface DirectusUsersRelations {
    avatar: DirectusFilesPrimaryKey | DirectusFiles;

    policies: (DirectusAccessPrimaryKey | DirectusAccess)[];

    role: DirectusRolesPrimaryKey | DirectusRoles;
}

/**
 * DirectusUsersRelatedCollections maps the {@link DirectusUsersRelations}
 * fields to the name of the related collection.
 */
export interface DirectusUsersRelatedCollections {
    avatar: 'directus_files';
    policies: 'directus_access';
    role: 'directus_roles';
}

export type DirectusUsersPayload = Omit<DirectusUsers, 'last_access'> & {
    // Type: dateTime
    readonly last_access?: string | null;
};

/**
 * @param v The payload to parse.
 * @returns The payload parsed to {@link DirectusUsers}.
 */
export function parseDirectusUsersPayload(v: DirectusUsersPayload): DirectusUsers {
    const r = v as Record<keyof DirectusUsers, unknown>;
    if (v.last_access) {
        r.last_access = new Date(v.last_access);
    }
    return r as DirectusUsers;
}
