// File generated by directus-schema-types. Do not change.

import { DirectusAccessPrimaryKey, DirectusAccess } from './directus_access';
import { DirectusPermissionsPrimaryKey, DirectusPermissions } from './directus_permissions';

// --- directus_policies ---

export type DirectusPoliciesPrimaryKeyField = 'id';
export type DirectusPoliciesPrimaryKey = string;

export interface DirectusPolicies {
    // Type: boolean
    admin_access?: boolean;

    // Type: boolean
    app_access?: boolean;

    // Type: text
    description?: string | null;

    // $t:field_options.directus_policies.enforce_tfa
    // Type: boolean
    enforce_tfa?: boolean;

    // Type: string
    icon?: string;

    // Type: uuid
    id?: string | null;

    // Type: csv
    ip_access?: any | null;

    // Type: string
    name: string;
}

export interface DirectusPoliciesRelations {
    permissions: (DirectusPermissionsPrimaryKey | DirectusPermissions)[];

    roles: (DirectusAccessPrimaryKey | DirectusAccess)[];

    users: (DirectusAccessPrimaryKey | DirectusAccess)[];
}

// The payload is the same as the schema definition.
export type DirectusPoliciesPayload = DirectusPolicies;

/**
 * @param v The payload to parse.
 * @returns The payload as it is received: it is the same as the schema definition.
 */
export function parseDirectusPoliciesPayload(v: DirectusPoliciesPayload): DirectusPolicies {
    return v;
}
