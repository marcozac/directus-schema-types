// File generated by directus-schema-types. Do not change.

import { DirectusPanelsPrimaryKey, DirectusPanels } from './directus_panels';
import { DirectusUsersPrimaryKey, DirectusUsers } from './directus_users';

// --- directus_dashboards ---

export type DirectusDashboardsPrimaryKeyField = 'id';
export type DirectusDashboardsPrimaryKey = string;

export interface DirectusDashboards {
    // Type: string
    color?: string | null;

    // Type: timestamp
    date_created?: Date | null;

    // Type: string
    icon?: string;

    // Type: uuid
    id?: string;

    // Type: string
    name?: string;

    // Type: text
    note?: string | null;

    // Type: string
    user_created?: string | null;
}

export interface DirectusDashboardsRelations {
    panels: (DirectusPanelsPrimaryKey | DirectusPanels)[];

    user_created: DirectusUsersPrimaryKey | DirectusUsers;
}

export type DirectusDashboardsPayload = Omit<DirectusDashboards, 'date_created'> & {
    // Type: timestamp
    date_created?: string | null;
};

/**
 * @param v The payload to parse.
 * @returns The payload parsed to {@link DirectusDashboards}.
 */
export function parseDirectusDashboardsPayload(v: DirectusDashboardsPayload): DirectusDashboards {
    const r: Record<string, unknown> = v;
    if (v.date_created) {
        r.date_created = new Date(v.date_created);
    }
    return r as DirectusDashboards;
}
